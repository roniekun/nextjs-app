*scrolltrigger in gsap.timeline()

const MyComponent = () => {
  useEffect(() => {
    // Create a GSAP timeline
    const timeline = gsap.timeline({
      scrollTrigger: {
        trigger: ".scrollable-section",
        start: "top top",
        end: "bottom bottom",
        scrub: true, // Smoothly animate based on scroll position
      }
    });

    // Add animations to the timeline
    timeline
      .from(".box1", { x: -200, opacity: 0, duration: 1 })
      .to(".box2", { scale: 1.5, opacity: 1, duration: 1 }, "-=0.5")
      .from(".box3", { rotation: 360, duration: 1 });

    // Clean up ScrollTrigger instances on component unmount
    return () => {
      ScrollTrigger.getAll().forEach(trigger => trigger.kill());
    };
  }, []);


  *spreading ref 
   ref={(el) => (array.current[idx] = el)}


fontface*
@font-face {
  font-family: "Neue";
  src: url("/fonts/PPNeueMontreal-thin.otf") format("opentype");
  font-weight: 100; /* Thin */
  font-style: normal;
}

@font-face {
  font-family: "Neue";
  src: url("/fonts/PPNeueMontreal-Book.otf") format("opentype");
  font-weight: 400; /* Normal */
  font-style: normal;
}

@font-face {
  font-family: "Neue";
  src: url("/fonts/PPNeueMontreal-Medium.otf") format("opentype");
  font-weight: 500; /* Medium */
  font-style: normal;
}

@font-face {
  font-family: "Neue";
  src: url("/fonts/PPNeueMontreal-Bold.otf") format("opentype");
  font-weight: 700; /* Bold */
  font-style: normal;
}
